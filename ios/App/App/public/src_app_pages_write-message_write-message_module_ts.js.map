{"version":3,"file":"src_app_pages_write-message_write-message_module_ts.js","mappings":"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","sources":["./src/app/pages/write-message/write-message.page.html","./src/app/pages/write-message/write-message-routing.module.ts","./src/app/pages/write-message/write-message.module.ts","./src/app/pages/write-message/write-message.page.ts"],"sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\r\\n  <ion-toolbar color=\\\"cgreen\\\"class=\\\"bg_transp\\\" lines=\\\"none\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"light\\\" defaultHref=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-avatar class=\\\"ion-margin\\\" slot=\\\"start\\\">\\r\\n      <img [src]=\\\"toUser?.get('photoURL')\\\" />\\r\\n    </ion-avatar>\\r\\n    <ion-title slot=\\\"start\\\" color=\\\"light\\\">{{ toUser?.get('displayName') }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-list *ngFor=\\\"let mes of messages\\\">\\r\\n    <ion-card style=\\\"width: 90%;\\\" class=\\\"ion-padding ion-float-right\\\" *ngIf=\\\"mes?.get('from') === currentUser?.id\\\">\\r\\n      <ion-card-title>{{ mes?.get('message') }}</ion-card-title>\\r\\n      <ion-card-subtitle>\\r\\n        {{ mes?.get('created')?.toDate() | date }}\\r\\n      </ion-card-subtitle>\\r\\n    </ion-card>\\r\\n\\r\\n    <!-- Check if the message is text or image -->\\r\\n    <ion-card style=\\\"width: 90%;\\\" color=\\\"light\\\" class=\\\"ion-padding ion-float-left\\\" *ngIf=\\\"mes?.get('from') === toUser?.id\\\">\\r\\n      <ion-card-title *ngIf=\\\"mes?.get('type') === 'text'\\\">{{ mes?.get('message') }}</ion-card-title>\\r\\n      <img [src]=\\\"mes?.get('message')\\\" *ngIf=\\\"mes?.get('type') === 'img'\\\"/>\\r\\n      <ion-card-subtitle>\\r\\n        {{ mes?.get('created')?.toDate() | date }}\\r\\n      </ion-card-subtitle>\\r\\n    </ion-card>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n\\r\\n  <ion-list *ngIf=\\\"skeleton\\\">\\r\\n    <ion-item *ngFor=\\\"let i of [0,1,2,3,4,5,6,7,8,9]\\\">\\r\\n      <ion-thumbnail slot=\\\"start\\\" class=\\\"ion-margin\\\">\\r\\n        <ion-skeleton-text animated></ion-skeleton-text>\\r\\n      </ion-thumbnail>\\r\\n      <ion-label>\\r\\n        <h3>\\r\\n          <ion-skeleton-text animated style=\\\"width: 90%\\\"></ion-skeleton-text>\\r\\n        </h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar>\\r\\n    <ion-textarea type=\\\"text\\\" maxlength=\\\"255\\\" [(ngModel)]=\\\"message\\\" placeholder=\\\"Message\\\" required></ion-textarea>\\r\\n    <!-- Element is hidden by default -->\\r\\n    <ion-item class=\\\"ion-hide\\\">\\r\\n      <input type=\\\"file\\\" id=\\\"imagePicker\\\" accept=\\\"image/png, image/jpeg\\\" />\\r\\n    </ion-item>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button id=\\\"submitImage\\\">\\r\\n        <ion-icon color=\\\"cgreen\\\" name=\\\"camera\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-button (click)=\\\"sendMessage()\\\">\\r\\n        <ion-icon color=\\\"cgreen\\\" name=\\\"send\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { WriteMessagePage } from './write-message.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WriteMessagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class WriteMessagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { WriteMessagePageRoutingModule } from './write-message-routing.module';\r\n\r\nimport { WriteMessagePage } from './write-message.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    WriteMessagePageRoutingModule\r\n  ],\r\n  declarations: [WriteMessagePage]\r\n})\r\nexport class WriteMessagePageModule {}\r\n","/* eslint-disable @typescript-eslint/dot-notation */\r\n/* eslint-disable max-len */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { addDoc, collection, doc, DocumentData, getDocs, getFirestore, orderBy, query, serverTimestamp, setDoc } from 'firebase/firestore';\r\nimport { getDownloadURL, getStorage, ref, uploadBytesResumable } from 'firebase/storage';\r\nimport { RemedeServiceService } from 'src/app/services/remede-service.service';\r\n\r\n@Component({\r\n  selector: 'app-write-message',\r\n  templateUrl: './write-message.page.html',\r\n  styleUrls: ['./write-message.page.scss'],\r\n})\r\nexport class WriteMessagePage implements OnInit {\r\n\r\n  public toUser: DocumentData;\r\n  public messages: DocumentData[] = [];\r\n  public message: string;\r\n  public currentUser: DocumentData;\r\n  public skeleton = true;\r\n  private to: string;\r\n  constructor(\r\n    private appService: RemedeServiceService,\r\n    private activeRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    this.to = this.activeRoute.snapshot.paramMap.get('to');\r\n    this.toUser = await this.appService.getUser(this.to);\r\n    this.currentUser = await this.appService.getUser(getAuth().currentUser.uid);\r\n    const imageInput = document.getElementById('imagePicker');\r\n    const imageButtonElement = document.getElementById('submitImage');\r\n    imageButtonElement.addEventListener('click', () => {\r\n      imageInput.click();\r\n    });\r\n    imageInput.addEventListener('change', (e) => {\r\n      this.sendImage(e.target['files'][0]);\r\n    });\r\n    await this.getMessages();\r\n  }\r\n\r\n  public async getMessages() {\r\n    this.messages = [];\r\n    const messagesRef = query(collection(getFirestore(), `Messages/${getAuth().currentUser.uid}/Users/${this.toUser?.id}/Conversations`),\r\n      orderBy('created')\r\n    );\r\n    const result = await getDocs(messagesRef);\r\n    result.forEach((data) => {\r\n      this.messages.push(data);\r\n    });\r\n    this.skeleton = false;\r\n  }\r\n\r\n  public async sendMessage() {\r\n    if (this.message !== undefined) {\r\n      await addDoc(collection(getFirestore(), `Messages/${getAuth().currentUser.uid}/Users/${this.toUser?.id}/Conversations`), {\r\n        from: getAuth().currentUser.uid,\r\n        to: this.toUser?.id,\r\n        message: this.message,\r\n        state: 'activated',\r\n        type: 'text',\r\n        created: serverTimestamp()\r\n      });\r\n      await setDoc(doc(getFirestore(), `Messages/${getAuth().currentUser.uid}/Users/${this.toUser?.id}`), this.toUser?.data(),\r\n        { merge: true });\r\n\r\n      await addDoc(collection(getFirestore(), `Messages/${this.toUser?.id}/Users/${getAuth().currentUser.uid}/Conversations`), {\r\n        from: getAuth().currentUser.uid,\r\n        to: this.toUser?.id,\r\n        message: this.message,\r\n        state: 'activated',\r\n        type: 'text',\r\n        created: serverTimestamp()\r\n      });\r\n      await setDoc(doc(getFirestore(), `Messages/${this.toUser?.id}/Users/${getAuth().currentUser.uid}`), this.currentUser?.data(),\r\n        { merge: true }\r\n      );\r\n      this.message = await undefined;\r\n    } else {\r\n      await this.appService.presentToast('Le message est vide', 'danger');\r\n    }\r\n    await this.getMessages();\r\n  }\r\n\r\n  public async sendImage(image: File) {\r\n    this.appService.presentLoadingDefault('Chargement de l\\'image, veuillez patienter...');\r\n    const filePath = `Files/images/messages/${image.name}`;\r\n    const newImageRef = ref(getStorage(), filePath);\r\n    const fileSnapshot = await uploadBytesResumable(newImageRef, image);\r\n    const publicImageUrl = await getDownloadURL(newImageRef);\r\n    await addDoc(collection(getFirestore(), `Messages/${getAuth().currentUser.uid}/Users/${this.toUser?.id}/Conversations`), {\r\n      from: getAuth().currentUser.uid,\r\n      to: this.toUser?.id,\r\n      message: publicImageUrl,\r\n      state: 'activated',\r\n      type: 'img',\r\n      created: serverTimestamp()\r\n    });\r\n    await setDoc(doc(getFirestore(), `Messages/${getAuth().currentUser.uid}/Users/${this.toUser?.id}`), this.toUser?.data(),\r\n      { merge: true });\r\n\r\n    await addDoc(collection(getFirestore(), `Messages/${this.toUser?.id}/Users/${getAuth().currentUser.uid}/Conversations`), {\r\n      from: getAuth().currentUser.uid,\r\n      to: this.toUser?.id,\r\n      message: publicImageUrl,\r\n      state: 'activated',\r\n      type: 'img',\r\n      created: serverTimestamp()\r\n    });\r\n    await setDoc(doc(getFirestore(), `Messages/${this.toUser?.id}/Users/${getAuth().currentUser.uid}`), this.currentUser?.data(),\r\n      { merge: true }\r\n    );\r\n    await this.getMessages();\r\n    this.appService.dismissLoading();\r\n  }\r\n\r\n  public async doRefresh(event) {\r\n    await this.ngOnInit();\r\n    await event.target.complete();\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}