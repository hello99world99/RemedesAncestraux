{"version":3,"file":"src_app_pages_messages_messages_module_ts.js","mappings":";;;;;;;;;;;;;AAAA,iEAAe,qmCAAqmC,wBAAwB,sBAAsB,2BAA2B,qtBAAqtB;;;;;;;;;;;;;;;;;;;ACAz2D;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;IAWlC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACnB/B,4BAA4B;AACsB;AACT;AAEsC;IAOlE,YAAY,SAAZ,YAAY;IAMvB,YACU,UAAgC,EAChC,MAAc;QADd,eAAU,GAAV,UAAU,CAAsB;QAChC,WAAM,GAAN,MAAM,CAAQ;QALjB,UAAK,GAAmB,EAAE,CAAC;QAE3B,aAAQ,GAAG,IAAI,CAAC;IAInB,CAAC;IAEC,QAAQ;;YACZ,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC;KAAA;IAEY,QAAQ;;YACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YACpD,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;KAAA;IAEM,YAAY,CAAC,GAAW;QAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE;gBACrC,EAAE,EAAE,GAAG;aACR,CAAC,CAAC,CAAC;IACN,CAAC;IAEY,SAAS,CAAC,KAAK;;YAC1B,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;YACtB,MAAM,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAChC,CAAC;KAAA;CAEF;;YA1CQ,yFAAoB;YAFpB,mDAAM;;AASF,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,wMAAmC;;KAEpC,CAAC;GACW,YAAY,CAmCxB;AAnCwB","sources":["./src/app/pages/messages/messages.page.html","./src/app/pages/messages/messages-routing.module.ts","./src/app/pages/messages/messages.module.ts","./src/app/pages/messages/messages.page.ts"],"sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\r\\n  <ion-toolbar color=\\\"cgreen\\\" class=\\\"bg_transp\\\" lines=\\\"none\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button color=\\\"light\\\" routerLink=\\\"/\\\">\\r\\n        <ion-icon name=\\\"caret-back-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title color=\\\"light\\\">Messages</ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-item color=\\\"cgreen\\\" lines=\\\"none\\\">\\r\\n    <ion-searchbar color=\\\"light\\\" showCancelButton=\\\"focus\\\" cancelButtonText=\\\"Annuler\\\" placeholder=\\\"Rechercher...\\\"\\r\\n      [(ngModel)]=\\\"searchMessage\\\" animated focus></ion-searchbar>\\r\\n  </ion-item>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-list class=\\\"ion-no-padding\\\" *ngFor=\\\"let user of users\\\">\\r\\n    <ion-item color=\\\"light\\\" (click)=\\\"writeMessage(user?.id)\\\">\\r\\n      <ion-avatar class=\\\"ion-margin\\\">\\r\\n        <img [src]=\\\"user?.get('photoURL')\\\" />\\r\\n      </ion-avatar>\\r\\n      <ion-label>\\r\\n        <b>{{ user?.get('userName') }}</b>\\r\\n        <p>{{ user?.get('displayName') }}</p>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-list *ngIf=\\\"skeleton\\\">\\r\\n    <ion-item *ngFor=\\\"let i of [0,1,2,3,4,5,6,7,8,9]\\\">\\r\\n      <ion-thumbnail slot=\\\"start\\\" class=\\\"ion-margin\\\">\\r\\n        <ion-skeleton-text animated></ion-skeleton-text>\\r\\n      </ion-thumbnail>\\r\\n      <ion-label>\\r\\n        <h3>\\r\\n          <ion-skeleton-text animated style=\\\"width: 90%\\\"></ion-skeleton-text>\\r\\n        </h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button color=\\\"cgreen\\\">\\r\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MessagesPage } from './messages.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MessagesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MessagesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MessagesPageRoutingModule } from './messages-routing.module';\r\n\r\nimport { MessagesPage } from './messages.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MessagesPageRoutingModule\r\n  ],\r\n  declarations: [MessagesPage]\r\n})\r\nexport class MessagesPageModule {}\r\n","/* eslint-disable max-len */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DocumentData } from 'firebase/firestore';\r\nimport { RemedeServiceService } from 'src/app/services/remede-service.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.page.html',\r\n  styleUrls: ['./messages.page.scss'],\r\n})\r\nexport class MessagesPage implements OnInit {\r\n\r\n  public searchMessage: string;\r\n  public users: DocumentData[] = [];\r\n  public currentUser: DocumentData;\r\n  public skeleton = true;\r\n  constructor(\r\n    private appService: RemedeServiceService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    await this.getUsers();\r\n  }\r\n\r\n  public async getUsers() {\r\n    this.users = [];\r\n    const results = await this.appService.getMessages();\r\n    results.forEach((data) => {\r\n      this.users.push(data);\r\n    });\r\n    this.skeleton = false;\r\n  }\r\n\r\n  public writeMessage(uid: string){\r\n    this.router.navigate(['write-message', {\r\n      to: uid\r\n    }]);\r\n  }\r\n\r\n  public async doRefresh(event) {\r\n    await this.ngOnInit();\r\n    await event.target.complete();\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}