{"version":3,"file":"src_app_pages_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/components/dashboard/cim-section/cim-section.component.html","./src/app/components/dashboard/pharma-section/pharma-section.component.html","./src/app/components/dashboard/users-section/users-section.component.html","./src/app/pages/dashboard/dashboard.page.html","./src/app/components/dashboard/cim-section/cim-section.component.ts","./src/app/components/dashboard/pharma-section/pharma-section.component.ts","./src/app/components/dashboard/users-section/users-section.component.ts","./src/app/pages/dashboard/dashboard-routing.module.ts","./src/app/pages/dashboard/dashboard.module.ts","./src/app/pages/dashboard/dashboard.page.ts"],"sourcesContent":["export default \"<ion-card class=\\\"bg_transp\\\">\\r\\n  <ion-button class=\\\"ion-margin\\\" routerLink=\\\"/add-cim\\\" color=\\\"cgreen\\\" expand=\\\"block\\\">\\r\\n    <ion-icon icon=\\\"add\\\"></ion-icon>\\r\\n    <span class=\\\"ion-margin\\\">Ajouter</span>\\r\\n  </ion-button>\\r\\n\\r\\n  <ion-list class=\\\"bg_transp ion-no-margin ion-no-padding\\\" *ngFor=\\\"let cim of cimList\\\">\\r\\n    <ion-item-sliding *ngIf=\\\"cim[1]?.state === 'activated'\\\">\\r\\n      <ion-item (click)=\\\"viewContents(cim[0])\\\" color=\\\"light\\\" class=\\\"bg_transp ion-no-margin ion-no-padding\\\">\\r\\n        <ion-avatar class=\\\"ion-margin\\\" slot=\\\"start\\\">\\r\\n          <img src=\\\"{{ cim[1]?.image }}\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <p>{{ cim[1]?.title }}</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"start\\\">\\r\\n        <ion-item-option (click)=\\\"desactivateCIM(cim[0])\\\">\\r\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n          <span>supprimer</span>\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option color=\\\"cgreen\\\" (click)=\\\"editCIM(cim[0])\\\">\\r\\n          <ion-icon name=\\\"create\\\"></ion-icon>\\r\\n          <span>modifier</span>\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n\\r\\n    <!-- desactivated cim -->\\r\\n\\r\\n    <ion-item-sliding color=\\\"warning\\\" *ngIf=\\\"cim[1]?.state === 'desactivated'\\\">\\r\\n      <ion-item (click)=\\\"editCIM(cim[0])\\\" color=\\\"danger\\\" class=\\\"bg_transp ion-no-margin ion-no-padding\\\">\\r\\n        <ion-avatar class=\\\"ion-margin\\\" slot=\\\"start\\\">\\r\\n          <img src=\\\"{{ cim[1]?.image }}\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <p>{{ cim[1]?.title }}</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"start\\\">\\r\\n        <ion-item-option color=\\\"cgreen\\\" (click)=\\\"activateCIM(cim[0])\\\">\\r\\n          <ion-icon name=\\\"reload\\\"></ion-icon>\\r\\n          <span>activer</span>\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option color=\\\"cgreen\\\" (click)=\\\"viewContents(cim[0])\\\">\\r\\n          <ion-icon name=\\\"create\\\"></ion-icon>\\r\\n          <span>maladies</span>\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-list *ngIf=\\\"skeleton\\\">\\r\\n    <ion-item *ngFor=\\\"let i of [0,1,2,3,4,5,6,7,8,9]\\\">\\r\\n      <ion-thumbnail slot=\\\"start\\\" class=\\\"ion-margin\\\">\\r\\n        <ion-skeleton-text animated></ion-skeleton-text>\\r\\n      </ion-thumbnail>\\r\\n      <ion-label>\\r\\n        <h3>\\r\\n          <ion-skeleton-text animated style=\\\"width: 90%\\\"></ion-skeleton-text>\\r\\n        </h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-card>\\r\\n\";","export default \"<ion-card class=\\\"bg_transp\\\">\\r\\n  <ion-list class=\\\"ion-no-padding\\\" *ngFor=\\\"let pharma of pharmas\\\">\\r\\n    <!-- PharmacopÃ©e activated -->\\r\\n    <ion-item-sliding *ngIf=\\\"pharma?.get('state') === 'activated'\\\">\\r\\n      <ion-item color=\\\"light\\\">\\r\\n        <ion-avatar class=\\\"ion-margin\\\">\\r\\n          <img [src]=\\\"pharma?.get('image')\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <b>{{ pharma?.get('nom') }}</b>\\r\\n          <p>{{ pharma?.get('email') }}</p>\\r\\n          <p>{{ pharma?.get('telephone') }}</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"start\\\">\\r\\n        <ion-item-option color=\\\"danger\\\" (click)=\\\"desactivatePharma(pharma)\\\">desactivate</ion-item-option>\\r\\n      </ion-item-options>\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option color=\\\"cgreen\\\" (click)=\\\"activatePharma(pharma)\\\">activate</ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n\\r\\n    <!-- PharmacopÃ©es waiting -->\\r\\n    <ion-item-sliding *ngIf=\\\"pharma?.get('state') === 'waiting'\\\">\\r\\n      <ion-item color=\\\"warning\\\">\\r\\n        <ion-avatar class=\\\"ion-margin\\\">\\r\\n          <img [src]=\\\"pharma?.get('image')\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <b>{{ pharma?.get('nom') }}</b>\\r\\n          <p>{{ pharma?.get('email') }}</p>\\r\\n          <p>{{ pharma?.get('telephone') }}</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"start\\\">\\r\\n        <ion-item-option color=\\\"danger\\\" (click)=\\\"desactivatePharma(pharma)\\\">desactivate</ion-item-option>\\r\\n      </ion-item-options>\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option color=\\\"cgreen\\\" (click)=\\\"activatePharma(pharma)\\\">activate</ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n\\r\\n    <!-- PharmacopÃ©es desactivated -->\\r\\n    <ion-item-sliding *ngIf=\\\"pharma?.get('state') === 'desactivated'\\\">\\r\\n      <ion-item color=\\\"danger\\\">\\r\\n        <ion-avatar class=\\\"ion-margin\\\">\\r\\n          <img [src]=\\\"pharma?.get('image')\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <b>{{ pharma?.get('nom') }}</b>\\r\\n          <p>{{ pharma?.get('email') }}</p>\\r\\n          <p>{{ pharma?.get('telephone') }}</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option color=\\\"cgreen\\\" (click)=\\\"activatePharma(pharma)\\\">activate</ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-list *ngIf=\\\"skeleton\\\">\\r\\n    <ion-item *ngFor=\\\"let i of [0,1,2,3,4,5,6,7,8,9]\\\">\\r\\n      <ion-thumbnail slot=\\\"start\\\" class=\\\"ion-margin\\\">\\r\\n        <ion-skeleton-text animated></ion-skeleton-text>\\r\\n      </ion-thumbnail>\\r\\n      <ion-label>\\r\\n        <h3>\\r\\n          <ion-skeleton-text animated style=\\\"width: 90%\\\"></ion-skeleton-text>\\r\\n        </h3>\\r\\n        <h3>\\r\\n          <ion-skeleton-text animated style=\\\"width: 80%\\\"></ion-skeleton-text>\\r\\n        </h3>\\r\\n        <h3>\\r\\n          <ion-skeleton-text animated style=\\\"width: 70%\\\"></ion-skeleton-text>\\r\\n        </h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-card>\\r\\n\";","export default \"<ion-card class=\\\"bg_transp\\\">\\r\\n  <ion-list *ngFor=\\\"let user of users\\\">\\r\\n    <ion-item-sliding>\\r\\n      <ion-item>\\r\\n        <ion-avatar class=\\\"ion-margin\\\">\\r\\n          <img src=\\\"{{ user[1]?.photoURL }}\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <b>{{ user[1]?.displayName }}</b>\\r\\n          <p>{{ user[1]?.userName }}</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"start\\\">\\r\\n        <ion-item-option color=\\\"danger\\\" (click)=\\\"desactivateUser(user[0])\\\">desactivate</ion-item-option>\\r\\n      </ion-item-options>\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option color=\\\"cgreen\\\" (click)=\\\"activateUser(user[0])\\\">activate</ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-list *ngIf=\\\"skeleton\\\">\\r\\n    <ion-item *ngFor=\\\"let i of [0,1,2,3,4,5,6,7,8,9]\\\">\\r\\n      <ion-thumbnail slot=\\\"start\\\" class=\\\"ion-margin\\\">\\r\\n        <ion-skeleton-text animated></ion-skeleton-text>\\r\\n      </ion-thumbnail>\\r\\n      <ion-label>\\r\\n        <h3>\\r\\n          <ion-skeleton-text animated style=\\\"width: 90%\\\"></ion-skeleton-text>\\r\\n        </h3>\\r\\n        <h3>\\r\\n          <ion-skeleton-text animated style=\\\"width: 80%\\\"></ion-skeleton-text>\\r\\n        </h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-card>\\r\\n\";","export default \"<ion-header class=\\\"ion-no-border\\\">\\r\\n  <ion-toolbar color=\\\"cgreen\\\" class=\\\"bg_transp\\\" lines=\\\"none\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button routerLink=\\\"/\\\">\\r\\n        <ion-icon color=\\\"light\\\" name=\\\"caret-back-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title color=\\\"light\\\">Dashboard</ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-segment color=\\\"cgreen\\\" position=\\\"fixed\\\" scrollable (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"{{ tab }}\\\">\\r\\n    <ion-segment-button value=\\\"cim\\\">\\r\\n      <ion-label>cim</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"users\\\">\\r\\n      <ion-label>Users</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"pharma\\\">\\r\\n      <ion-label>PharmacopÃ©es</ion-label>\\r\\n    </ion-segment-button>\\r\\n  </ion-segment>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <!-- CIM tab content -->\\r\\n  <app-cim-section *ngIf=\\\"tab === 'cim'\\\"></app-cim-section>\\r\\n\\r\\n  <!-- Users tab content -->\\r\\n  <app-users-section *ngIf=\\\"tab === 'users'\\\"></app-users-section>\\r\\n\\r\\n  <!-- Pharma tab content -->\\r\\n  <app-pharma-section *ngIf=\\\"tab === 'pharma'\\\"></app-pharma-section>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\";","/* eslint-disable object-shorthand */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { doc, getFirestore, updateDoc } from 'firebase/firestore';\r\nimport { RemedeServiceService } from 'src/app/services/remede-service.service';\r\nimport { EditCimComponent } from '../../editor/edit-cim/edit-cim.component';\r\n\r\n@Component({\r\n  selector: 'app-cim-section',\r\n  templateUrl: './cim-section.component.html',\r\n  styleUrls: ['./cim-section.component.scss'],\r\n})\r\nexport class CimSectionComponent implements OnInit {\r\n\r\n  public cimList: any[] = [];\r\n  public skeleton = true;\r\n  constructor(\r\n    public modalController: ModalController,\r\n    private appService: RemedeServiceService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getListCIM();\r\n  }\r\n\r\n  public async getListCIM() {\r\n    this.cimList = [];\r\n    const querySnapshot = await this.appService.getListCIM();\r\n    querySnapshot.forEach((data) => {\r\n      this.cimList.push([data.id, data.data()]);\r\n    });\r\n    this.skeleton = false;\r\n  }\r\n\r\n  public async activateCIM(uid: string) {\r\n    const cimRef = doc(getFirestore(), 'CIM', uid);\r\n    await updateDoc(cimRef, {\r\n      state: 'activated',\r\n    }).then((result) => {\r\n      this.appService.presentToast('CIM reactivatÃ© avec succÃ¨ss', 'light');\r\n      this.getListCIM();\r\n    });\r\n  }\r\n\r\n  public async desactivateCIM(uid: string) {\r\n    const cimRef = doc(getFirestore(), 'CIM', uid);\r\n    await updateDoc(cimRef, {\r\n      state: 'desactivated',\r\n    }).then((result) => {\r\n      this.appService.presentToast('CIM supprimÃ© avec succÃ¨ss', 'light');\r\n      this.getListCIM();\r\n    });\r\n  }\r\n\r\n  public async editCIM(uid: string){\r\n    const modal = await this.modalController.create({\r\n      component: EditCimComponent,\r\n      cssClass: 'light',\r\n      swipeToClose: true,\r\n      componentProps: {\r\n        uid: uid\r\n      }\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  public viewContents(uid: string){\r\n    this.router.navigate(['cim-content', {\r\n      uid: uid\r\n    }]);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PharmaServiceService } from '../../../services/pharma-service.service';\r\nimport { doc, DocumentData, getFirestore, updateDoc } from 'firebase/firestore';\r\nimport { RemedeServiceService } from 'src/app/services/remede-service.service';\r\n\r\n@Component({\r\n  selector: 'app-pharma-section',\r\n  templateUrl: './pharma-section.component.html',\r\n  styleUrls: ['./pharma-section.component.scss'],\r\n})\r\nexport class PharmaSectionComponent implements OnInit {\r\n\r\n  public pharmas: DocumentData[] = [];\r\n  public skeleton = true;\r\n  constructor(\r\n    private pharmaService: PharmaServiceService,\r\n    private appService: RemedeServiceService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    this.getAllPharma();\r\n  }\r\n\r\n  public async getAllPharma() {\r\n    this.pharmas = [];\r\n    const results = await this.pharmaService.getAllPharma();\r\n    results.forEach((data) => {\r\n      this.pharmas.push(data);\r\n    });\r\n    this.skeleton = false;\r\n  }\r\n\r\n  public async desactivatePharma(pharma: DocumentData) {\r\n    const cimRef = doc(getFirestore(), 'Pharmacopees', pharma?.id);\r\n    await updateDoc(cimRef, {\r\n      state: 'desactivated',\r\n    }).then(async (result) => {\r\n      await this.getAllPharma();\r\n      this.appService.presentToast('PharmacopÃ©e desactivÃ© avec succÃ¨ss', 'danger');\r\n    });\r\n  }\r\n\r\n  public async activatePharma(pharma: DocumentData) {\r\n    const cimRef = doc(getFirestore(), 'Pharmacopees', pharma?.id);\r\n    await updateDoc(cimRef, {\r\n      state: 'activated',\r\n    }).then(async (result) => {\r\n      await this.getAllPharma();\r\n      this.appService.presentToast('PharmacopÃ©e reactivatÃ© avec succÃ¨ss', 'light');\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { collection, getDocs, getFirestore, orderBy, query } from 'firebase/firestore';\r\nimport { RemedeServiceService } from 'src/app/services/remede-service.service';\r\n\r\n@Component({\r\n  selector: 'app-users-section',\r\n  templateUrl: './users-section.component.html',\r\n  styleUrls: ['./users-section.component.scss'],\r\n})\r\nexport class UsersSectionComponent implements OnInit {\r\n\r\n  public users: any[] = [];\r\n  public skeleton = true;\r\n  constructor(\r\n    private appService: RemedeServiceService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getUsers();\r\n  }\r\n\r\n  /**\r\n   * Method to get all CIM from remedy service\r\n   *\r\n   * @memberof CimPage\r\n   */\r\n\r\n   public async getUsers() {\r\n    const q = query(collection(getFirestore(), 'Users'), orderBy('displayName'));\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((data) => {\r\n      this.users.push([data.id, data.data()]);\r\n    });\r\n    this.skeleton = false;\r\n  }\r\n\r\n  public async activateUser(uid: string) {\r\n    console.log(uid);\r\n  }\r\n\r\n  public async desactivateUser(uid: string) {\r\n    console.log(uid);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DashboardPage } from './dashboard.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardPage } from './dashboard.page';\r\nimport { CimSectionComponent } from 'src/app/components/dashboard/cim-section/cim-section.component';\r\nimport { UsersSectionComponent } from 'src/app/components/dashboard/users-section/users-section.component';\r\nimport { PharmaSectionComponent } from 'src/app/components/dashboard/pharma-section/pharma-section.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    DashboardPageRoutingModule,\r\n  ],\r\n  declarations: [DashboardPage, CimSectionComponent, UsersSectionComponent, PharmaSectionComponent]\r\n})\r\nexport class DashboardPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.page.html',\r\n  styleUrls: ['./dashboard.page.scss'],\r\n})\r\nexport class DashboardPage implements OnInit {\r\n\r\n  public tab = 'cim';\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public segmentChanged(tab: any) {\r\n    this.tab = tab.detail.value;\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}