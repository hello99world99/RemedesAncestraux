{"version":3,"file":"src_app_pages_remede-infos_remede-infos_module_ts.js","mappings":"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","sources":["./src/app/pages/remede-infos/remede-infos.page.html","./src/app/pages/remede-infos/remede-infos-routing.module.ts","./src/app/pages/remede-infos/remede-infos.module.ts","./src/app/pages/remede-infos/remede-infos.page.ts"],"sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\r\\n  <ion-toolbar color=\\\"cgreen\\\" class=\\\"bg_transp\\\" lines=\\\"none\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"light\\\" defaultHref=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title color=\\\"light\\\">{{ pharma?.get('nom') }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card color=\\\"light\\\" class=\\\"bg_transp ion-padding ion-margin\\\"\\r\\n    style=\\\"background-image: url('{{ pharma?.data()?.image }}'); background-size: cover;\\\">\\r\\n    <ion-item class=\\\"bg_transp\\\" lines=\\\"none\\\">\\r\\n      <ion-avatar (click)=\\\"writeMessage(owner?.id)\\\" slot=\\\"end\\\">\\r\\n        <img src=\\\"{{ owner?.get('photoURL') }}\\\">\\r\\n      </ion-avatar>\\r\\n    </ion-item>\\r\\n    <ion-item class=\\\"bg_transp\\\" lines=\\\"none\\\"></ion-item>\\r\\n    <ion-card-content>\\r\\n      <ion-text class=\\\"text-bold ion-text-shadow bg_transp\\\">\\r\\n        <p>{{ owner?.get('displayName') }}</p>\\r\\n        <p>{{ pharma?.get('telephone') }}</p>\\r\\n        <p>{{ pharma?.get('email') }}</p>\\r\\n        <p>{{ pharma?.get('adresse') }}</p>\\r\\n      </ion-text>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card color=\\\"light\\\" class=\\\"ion-padding ion-margin\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle class=\\\"ion-text-center\\\">{{ remede?.get('nom') }}</ion-card-subtitle>\\r\\n    </ion-card-header>\\r\\n\\r\\n    <ion-card-content>\\r\\n      <img [src]=\\\"remede?.get('image')\\\" />\\r\\n      <ion-text>\\r\\n        <ion-label>{{ remede?.get('description') }}</ion-label>\\r\\n      </ion-text>\\r\\n      <ion-buttons>\\r\\n\\r\\n        <!-- Like a remedy -->\\r\\n        <ion-button color=\\\"{{'cgreen'}}\\\" (click)=\\\"like(remede)\\\"\\r\\n          *ngIf=\\\"(remede?.get('likes'))?.includes(currentUser?.uid)===true\\\">\\r\\n          <ion-icon name=\\\"heart-circle-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n        <ion-button (click)=\\\"like(remede)\\\" *ngIf=\\\"(remede?.get('likes')?.includes(currentUser?.uid))===false\\\">\\r\\n          <ion-icon name=\\\"heart-circle-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n        <ion-badge color=\\\"cgreen\\\">{{ remede?.get('likes')?.length }}</ion-badge>\\r\\n\\r\\n        <!-- Dislike a remedy -->\\r\\n        <ion-button color=\\\"cgreen\\\" (click)=\\\"dislike(remede)\\\"\\r\\n          *ngIf=\\\"(remede?.get('dislikes'))?.includes(currentUser?.uid)===true\\\">\\r\\n          <ion-icon name=\\\"heart-dislike-circle-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n        <ion-button (click)=\\\"dislike(remede)\\\" *ngIf=\\\"(remede?.get('dislikes'))?.includes(currentUser?.uid)===false\\\">\\r\\n          <ion-icon name=\\\"heart-dislike-circle-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n        <ion-badge color=\\\"cgreen\\\">{{ remede?.get('dislikes')?.length }}</ion-badge>\\r\\n\\r\\n        <!-- Comment a remedy -->\\r\\n        <ion-button (click)=\\\"comment(remede?.id)\\\">\\r\\n          <ion-icon name=\\\"chatbox-ellipses-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n\\r\\n        <!-- Bookmarks -->\\r\\n        <ion-button (click)=\\\"removeFromBookmark(remede)\\\"\\r\\n          *ngIf=\\\"remede?.get('bookmarks')?.includes(currentUser?.uid)===true\\\">\\r\\n          <ion-icon color=\\\"cgreen\\\" name=\\\"bookmark-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n        <ion-button (click)=\\\"addToBookmark(remede)\\\"\\r\\n          *ngIf=\\\"remede?.get('bookmarks')?.includes(currentUser?.uid)===false\\\">\\r\\n          <ion-icon name=\\\"bookmark-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n\\r\\n        <!-- Share remedy via other app-->\\r\\n        <ion-button (click)=\\\"shareIt(remede)\\\">\\r\\n          <ion-icon name=\\\"share-social\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-buttons>\\r\\n    </ion-card-content>\\r\\n    <audio class=\\\"player\\\" controls>\\r\\n      <source src=\\\"{{ remede?.get('audio') }}\\\">\\r\\n    </audio>\\r\\n  </ion-card>\\r\\n\\r\\n  <!-- Bottom small swiper   -->\\r\\n\\r\\n  <swiper class=\\\"ion-margin\\\" [config]=\\\"config\\\">\\r\\n    <ng-template swiperSlide *ngFor=\\\"let remedy of remedies\\\">\\r\\n      <ion-card color=\\\"light\\\" class=\\\"ion-padding\\\">\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>{{ remedy?.get('nom') }}</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <ion-avatar>\\r\\n            <ion-img class=\\\"ion-no-margin\\\" [src]=\\\"remedy?.get('image')\\\"></ion-img>\\r\\n          </ion-avatar>\\r\\n          <ion-card-subtitle>\\r\\n            <ion-text>\\r\\n              <ion-label>{{ remedy?.get('created').toDate() | date }}</ion-label>\\r\\n            </ion-text>\\r\\n          </ion-card-subtitle>\\r\\n        </ion-card-content>\\r\\n        <ion-button color=\\\"cgreen\\\" (click)=\\\"showRemede(remedy)\\\">\\r\\n          <ion-icon name=\\\"eye\\\"></ion-icon>\\r\\n          <span class=\\\"ion-margin\\\">voir</span>\\r\\n        </ion-button>\\r\\n      </ion-card>\\r\\n    </ng-template>\\r\\n  </swiper>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RemedeInfosPage } from './remede-infos.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RemedeInfosPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RemedeInfosPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SwiperModule } from 'swiper/angular';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { RemedeInfosPageRoutingModule } from './remede-infos-routing.module';\r\nimport { RemedeInfosPage } from './remede-infos.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RemedeInfosPageRoutingModule,\r\n    SwiperModule\r\n  ],\r\n  declarations: [RemedeInfosPage]\r\n})\r\nexport class RemedeInfosPageModule {}\r\n","/* eslint-disable max-len */\r\n/* eslint-disable @typescript-eslint/dot-notation */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DocumentData, DocumentSnapshot } from 'firebase/firestore';\r\nimport { RemedeServiceService } from 'src/app/services/remede-service.service';\r\nimport { PharmaServiceService } from '../../services/pharma-service.service';\r\nimport SwiperCore, { SwiperOptions, Navigation } from 'swiper';\r\n\r\nSwiperCore.use([Navigation]);\r\n@Component({\r\n  selector: 'app-remede-infos',\r\n  templateUrl: './remede-infos.page.html',\r\n  styleUrls: ['./remede-infos.page.scss'],\r\n})\r\nexport class RemedeInfosPage implements OnInit {\r\n\r\n  public config: SwiperOptions = {\r\n    slidesPerView: 2.4,\r\n    spaceBetween: 2,\r\n    navigation: true,\r\n    pagination: { clickable: true },\r\n    scrollbar: { draggable: true },\r\n  };\r\n\r\n  public pharma: DocumentData;\r\n  public remede: DocumentSnapshot<DocumentData>;\r\n  public owner: DocumentData;\r\n  public remedies: DocumentSnapshot<DocumentData>[] = [];\r\n  public currentUser: any;\r\n  private uid: string;\r\n  constructor(\r\n    private appService: RemedeServiceService,\r\n    private pharmaService: PharmaServiceService,\r\n    private activeRoute: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    this.appService.presentLoadingDefault('En cours de chargement, veuillez patienter...');\r\n    this.uid = this.activeRoute.snapshot.paramMap.get('uid');\r\n    this.currentUser = getAuth().currentUser;\r\n    this.remede = await this.pharmaService.getActivatedRemedy(this.uid);\r\n    this.getAllRemedes();\r\n    this.pharma = await this.pharmaService.getPharma(this.remede?.get('pharmacopee'));\r\n    const userInfoRef = this.pharmaService.getOwnerInfos(this.remede?.get('pharmacopee'));\r\n    this.owner = await userInfoRef;\r\n    this.appService.dismissLoading();\r\n  }\r\n\r\n  public async getRemede(uid: string){\r\n    this.remede = await this.pharmaService.getActivatedRemedy(uid);\r\n  }\r\n\r\n  /**\r\n   *Method that returns all remedy available for a specified illness\r\n   *\r\n   * @memberof RemedeInfosPage\r\n   */\r\n  public async getAllRemedes() {\r\n    this.remedies = [];\r\n    const remedies = await this.pharmaService.getRemedes(this.remede.get('pharmacopee'));\r\n    remedies.forEach((result) => {\r\n      this.remedies.push(result);\r\n    });\r\n  }\r\n\r\n  /**\r\n   *Method to display a remedy belonging to swiper list\r\n   *When clicked, remedy will be displayed in the top of the swiper\r\n   *\r\n   * @memberof RemedeInfosPage\r\n   */\r\n  public async showRemede(data: DocumentData) {\r\n    this.remede = await this.pharmaService.getActivatedRemedy(data?.id);\r\n  }\r\n\r\n  /**\r\n   * Method to like a remedy\r\n   *\r\n   * @memberof RemedeInfosPage\r\n   */\r\n  public like(remedy: DocumentData) {\r\n    this.appService.like(remedy).then((result) => {\r\n      this.getAllRemedes();\r\n      this.showRemede(remedy);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to dislike a remedy\r\n   *\r\n   * @memberof RemedeInfosPage\r\n   */\r\n  public dislike(remedy: DocumentData) {\r\n    this.appService.dislike(remedy).then((result) => {\r\n      this.getAllRemedes();\r\n      this.showRemede(remedy);\r\n    });\r\n  }\r\n\r\n  /**\r\n   *Method to comment a remedy\r\n   *\r\n   * @memberof RemedeInfosPage\r\n   */\r\n  public comment(uid: string) {\r\n    console.log('comment : ' + uid);\r\n  }\r\n\r\n  /**\r\n   *Method to add a remedy in to favorite page\r\n   *\r\n   * @memberof RemedeInfosPage\r\n   */\r\n  public addToBookmark(data: DocumentData): void {\r\n    this.pharmaService.addRemedyToBookmark(data);\r\n    this.showRemede(data);\r\n  }\r\n\r\n  public async removeFromBookmark(remedy: DocumentData){\r\n    await this.pharmaService.removeRemedyFromBookmark(remedy);\r\n    await this.showRemede(remedy);\r\n  }\r\n\r\n  public async shareIt(remedy: DocumentData){\r\n    this.appService.shareRemedy(remedy);\r\n  }\r\n\r\n  public writeMessage(uid: string){\r\n    if (getAuth().currentUser){\r\n      if (getAuth().currentUser.uid !== uid){\r\n        this.router.navigate(['write-message', {\r\n          to: uid\r\n        }]);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}